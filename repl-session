var noble = require('noble')
noble.startScanning()
noble.state
noble.on('discover', function(p){ console.log(p.id)});
noble.on('discover', function(p){ console.log(p.advertisement.serviceUuids)});
noble.stopScanning()
noble.startScanning()




noble.stopScanning()
device = null
noble.on('discover', function(p){ console.log(p.advertisement.serviceUuids); if (p.id == '987bf370b985') { device = p}});
noble.startScanning()

device
noble.stopScanning()
device.once('servicesDiscover', console.log);
device.once('connect', function(f){ console.log('the service', f)});
noble.startScanning()
noble.stopScanning()
device.discoverAllServicesAndCharacteristics(function(error, services, characteristics) { device.stuff = { services: services, characteristics: characteristics}});
device
device.id
device.connect()

device.discoverAllServicesAndCharacteristics(function(error, services, characteristics) { device.stuff = { services: services, characteristics: characteristics}});

device
device.stuff
device.stuff.services
device.services
device.services[0]

device.services[1]
device.services[2]
device.services[1]
var stuff = device.services.map(function(val, index, arr) { return { uuid: val.uuid, name: val.name, type: val.type, characteristics: val.characteristics.map(function(char){ return { uuid: char.uuid, name: char.name, type: char.type, properties: JSON.stringify(char.properties)}}) }})
stuff
fs
fs.writeFileSync('adamdata.json', JSON.stringify(stuff))

stuff[1]
stuff[2]
stuff[3]
